

- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC Varibles
      include_vars: vars/vpc_setup

    - name: Create vprofile VPC
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
      register: vpcout

    - debug:
        var: vpcout

    - name: create public subnets 1 in zone 1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{PubSub1Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub1
      register: pubsub1_out

    - name: create public subnets 2 in zone 2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{PubSub2Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub2
      register: pubsub2_out

    - name: create public subnets 3 in zone 3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{PubSub3Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub3
      register: pubsub3_out

    - name: create private subnets 1 in zone 1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{PriSub1Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-prisub1
      register: prisub1_out

    - name: create private subnets 2 in zone 2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{PriSub2Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-prisub2
      register: prisub2_out

    - name: create private subnets 3 in zone 3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{PriSub3Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-prisub3
      register: prisub3_out

    - name: create internet gateway setup
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        resource_tags:
          Name: vprofile-IGW
      register: IGW_out

    - name: Create public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: Vprofile PubRT
        subnets:
          - "{{ pubsub1_out.subnet.id }}"
          - "{{ pubsub2_out.subnet.id }}"
          - "{{ pubsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ IGW_out.gateway_id }}"
      register: PubsubRT

    - name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{ pubsub1_out.subnet.id }}"
        wait: true
        region: "{{region}}"
        if_exist_do_not_create: true
      register: NatGW_out

    - name: Create private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: Vprofile PriRT
        subnets:
          - "{{ prisub1_out.subnet.id }}"
          - "{{ prisub2_out.subnet.id }}"
          - "{{ prisub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ NatGW_out.nat_gateway_id }}"
      register: PrisubRT

    - debug:
        var: "{{items}}"
      loop:
        - vpcout_vpc.id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id
        - prisub1_out.subnet.id
        - prisub2_out.subnet.id
        - prisub3_out.subnet.id
        - igw_out.gateway_id
        - PubsubRT.route_table.id
        - NatGW_out.nat_gateway_id
        - PrisubRT.route_table.id